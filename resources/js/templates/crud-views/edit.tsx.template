import React from 'react';
import { Head, useForm } from '@inertiajs/react';
import AppLayout from '@/layouts/app-layout';
import { type BreadcrumbItem } from '@/types';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import {{MODEL_NAME}}Form from './{{KEBAB_CASE_NAME}}-form';
import { Save } from 'lucide-react';
import BackButton from '@/components/ui/back-button';

interface {{MODEL_NAME}} {
    id: number;
    {{MAIN_FIELD}}: string;
    // TODO: Adicionar outros campos conforme necessário
    created_at: string;
    updated_at: string;
}

interface EditProps {
    {{VARIABLE_NAME}}: {{MODEL_NAME}};
}

export default function Edit{{MODEL_NAME}}({ {{VARIABLE_NAME}} }: EditProps) {
    const breadcrumbs: BreadcrumbItem[] = [
        {
            title: 'Dashboard',
            href: route('dashboard'),
        },
        {
            title: '{{MODULE_NAME}}',
            href: '#',
        },
        {
            title: '{{PLURAL_NAME}}',
            href: route('{{ROUTE_PREFIX}}.index'),
        },
        {
            title: {{VARIABLE_NAME}}.{{MAIN_FIELD}},
            href: route('{{ROUTE_PREFIX}}.show', {{VARIABLE_NAME}}.id),
        },
        {
            title: 'Editar',
            href: '#',
        },
    ];

    const { data, setData, put, processing, errors } = useForm({
        {{MAIN_FIELD}}: {{VARIABLE_NAME}}.{{MAIN_FIELD}},
        // TODO: Adicionar outros campos conforme necessário
    });

    const submit = (e) => {
        e.preventDefault();
        put(route('{{ROUTE_PREFIX}}.update', {{VARIABLE_NAME}}.id));
    };

    return (
        <AppLayout>
            <Head title={`Editar ${{{VARIABLE_NAME}}.{{MAIN_FIELD}}}`} />
            <div className="max-w-2xl mx-auto">
                <Card>
                    <CardHeader>
                        <CardTitle>
                            <div className="flex items-center gap-4">
                                Editar {{SINGULAR_NAME}}
                            </div>
                        </CardTitle>
                        <CardDescription>
                            Atualize as informações do {{SINGULAR_NAME_LOWER}}
                        </CardDescription>
                    </CardHeader>
                    <CardContent>
                        <form onSubmit={submit}>
                            <{{MODEL_NAME}}Form
                                data={data}
                                setData={setData}
                                errors={errors}
                                mode='edit'
                            />

                            <div className="mt-6 flex justify-between items-center gap-4">
                                <BackButton backUrl={route('{{ROUTE_PREFIX}}.show', {{VARIABLE_NAME}}.id)}></BackButton>
                                <Button type="submit" disabled={processing}>
                                    <Save className="w-4 h-4 mr-2" />
                                    Atualizar {{SINGULAR_NAME}}
                                </Button>
                            </div>
                        </form>
                    </CardContent>
                </Card>
            </div>
        </AppLayout>
    );
}
